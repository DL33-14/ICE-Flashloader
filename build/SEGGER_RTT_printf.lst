ARM GAS  /tmp/ccqdLTlK.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SEGGER_RTT_printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "segger/rtt/src/SEGGER_RTT_printf.c"
  20              		.section	.text._StoreChar,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_StoreChar:
  27              	.LVL0:
  28              	.LFB0:
   1:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
   2:segger/rtt/src/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:segger/rtt/src/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
   5:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
   6:segger/rtt/src/SEGGER_RTT_printf.c **** *            (c) 1995 - 2021 SEGGER Microcontroller GmbH             *
   7:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
   8:segger/rtt/src/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  10:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
  11:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  12:segger/rtt/src/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  14:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
  15:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  16:segger/rtt/src/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  18:segger/rtt/src/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:segger/rtt/src/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:segger/rtt/src/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  22:segger/rtt/src/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:segger/rtt/src/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:segger/rtt/src/SEGGER_RTT_printf.c **** * condition is met:                                                  *
  25:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  26:segger/rtt/src/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:segger/rtt/src/SEGGER_RTT_printf.c **** *   notice, this condition and the following disclaimer.             *
  28:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  29:segger/rtt/src/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:segger/rtt/src/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
ARM GAS  /tmp/ccqdLTlK.s 			page 2


  31:segger/rtt/src/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:segger/rtt/src/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  33:segger/rtt/src/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:segger/rtt/src/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:segger/rtt/src/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:segger/rtt/src/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:segger/rtt/src/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:segger/rtt/src/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:segger/rtt/src/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:segger/rtt/src/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:segger/rtt/src/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  42:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  43:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
  44:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  45:segger/rtt/src/SEGGER_RTT_printf.c **** *       RTT version: 7.94k                                           *
  46:segger/rtt/src/SEGGER_RTT_printf.c **** *                                                                    *
  47:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
  48:segger/rtt/src/SEGGER_RTT_printf.c **** 
  49:segger/rtt/src/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  50:segger/rtt/src/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  51:segger/rtt/src/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  52:segger/rtt/src/SEGGER_RTT_printf.c **** Revision: $Rev: 17697 $
  53:segger/rtt/src/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  54:segger/rtt/src/SEGGER_RTT_printf.c **** */
  55:segger/rtt/src/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  56:segger/rtt/src/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  57:segger/rtt/src/SEGGER_RTT_printf.c **** 
  58:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
  59:segger/rtt/src/SEGGER_RTT_printf.c **** *
  60:segger/rtt/src/SEGGER_RTT_printf.c **** *       Defines, configurable
  61:segger/rtt/src/SEGGER_RTT_printf.c **** *
  62:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
  63:segger/rtt/src/SEGGER_RTT_printf.c **** */
  64:segger/rtt/src/SEGGER_RTT_printf.c **** 
  65:segger/rtt/src/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  66:segger/rtt/src/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  67:segger/rtt/src/SEGGER_RTT_printf.c **** #endif
  68:segger/rtt/src/SEGGER_RTT_printf.c **** 
  69:segger/rtt/src/SEGGER_RTT_printf.c **** #include <stdlib.h>
  70:segger/rtt/src/SEGGER_RTT_printf.c **** #include <stdarg.h>
  71:segger/rtt/src/SEGGER_RTT_printf.c **** 
  72:segger/rtt/src/SEGGER_RTT_printf.c **** 
  73:segger/rtt/src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  74:segger/rtt/src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  75:segger/rtt/src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  76:segger/rtt/src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  77:segger/rtt/src/SEGGER_RTT_printf.c **** 
  78:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
  79:segger/rtt/src/SEGGER_RTT_printf.c **** *
  80:segger/rtt/src/SEGGER_RTT_printf.c **** *       Types
  81:segger/rtt/src/SEGGER_RTT_printf.c **** *
  82:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
  83:segger/rtt/src/SEGGER_RTT_printf.c **** */
  84:segger/rtt/src/SEGGER_RTT_printf.c **** 
  85:segger/rtt/src/SEGGER_RTT_printf.c **** typedef struct {
  86:segger/rtt/src/SEGGER_RTT_printf.c ****   char*     pBuffer;
  87:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
ARM GAS  /tmp/ccqdLTlK.s 			page 3


  88:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  89:segger/rtt/src/SEGGER_RTT_printf.c **** 
  90:segger/rtt/src/SEGGER_RTT_printf.c ****   int   ReturnValue;
  91:segger/rtt/src/SEGGER_RTT_printf.c **** 
  92:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
  93:segger/rtt/src/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
  94:segger/rtt/src/SEGGER_RTT_printf.c **** 
  95:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
  96:segger/rtt/src/SEGGER_RTT_printf.c **** *
  97:segger/rtt/src/SEGGER_RTT_printf.c **** *       Function prototypes
  98:segger/rtt/src/SEGGER_RTT_printf.c **** *
  99:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
 100:segger/rtt/src/SEGGER_RTT_printf.c **** */
 101:segger/rtt/src/SEGGER_RTT_printf.c **** 
 102:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 103:segger/rtt/src/SEGGER_RTT_printf.c **** *
 104:segger/rtt/src/SEGGER_RTT_printf.c **** *       Static code
 105:segger/rtt/src/SEGGER_RTT_printf.c **** *
 106:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
 107:segger/rtt/src/SEGGER_RTT_printf.c **** */
 108:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 109:segger/rtt/src/SEGGER_RTT_printf.c **** *
 110:segger/rtt/src/SEGGER_RTT_printf.c **** *       _StoreChar
 111:segger/rtt/src/SEGGER_RTT_printf.c **** */
 112:segger/rtt/src/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  29              		.loc 1 112 60 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 112 60 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
 113:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned Cnt;
  40              		.loc 1 113 3 is_stmt 1 view .LVU2
 114:segger/rtt/src/SEGGER_RTT_printf.c **** 
 115:segger/rtt/src/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  41              		.loc 1 115 3 view .LVU3
  42              		.loc 1 115 7 is_stmt 0 view .LVU4
  43 0004 8268     		ldr	r2, [r0, #8]
  44              	.LVL1:
 116:segger/rtt/src/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  45              		.loc 1 116 3 is_stmt 1 view .LVU5
  46              		.loc 1 116 12 is_stmt 0 view .LVU6
  47 0006 531C     		adds	r3, r2, #1
  48              		.loc 1 116 22 view .LVU7
  49 0008 4068     		ldr	r0, [r0, #4]
  50              	.LVL2:
  51              		.loc 1 116 6 view .LVU8
  52 000a 8342     		cmp	r3, r0
  53 000c 05D8     		bhi	.L2
 117:segger/rtt/src/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  54              		.loc 1 117 5 is_stmt 1 view .LVU9
  55              		.loc 1 117 8 is_stmt 0 view .LVU10
ARM GAS  /tmp/ccqdLTlK.s 			page 4


  56 000e 2068     		ldr	r0, [r4]
  57              		.loc 1 117 25 view .LVU11
  58 0010 8154     		strb	r1, [r0, r2]
 118:segger/rtt/src/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  59              		.loc 1 118 5 is_stmt 1 view .LVU12
  60              		.loc 1 118 12 is_stmt 0 view .LVU13
  61 0012 A360     		str	r3, [r4, #8]
 119:segger/rtt/src/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  62              		.loc 1 119 5 is_stmt 1 view .LVU14
  63              		.loc 1 119 6 is_stmt 0 view .LVU15
  64 0014 E368     		ldr	r3, [r4, #12]
  65              		.loc 1 119 19 view .LVU16
  66 0016 0133     		adds	r3, r3, #1
  67 0018 E360     		str	r3, [r4, #12]
  68              	.L2:
 120:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 121:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 122:segger/rtt/src/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 123:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 124:segger/rtt/src/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  69              		.loc 1 124 3 is_stmt 1 view .LVU17
  70              		.loc 1 124 8 is_stmt 0 view .LVU18
  71 001a A268     		ldr	r2, [r4, #8]
  72              	.LVL3:
  73              		.loc 1 124 18 view .LVU19
  74 001c 6368     		ldr	r3, [r4, #4]
  75              		.loc 1 124 6 view .LVU20
  76 001e 9A42     		cmp	r2, r3
  77 0020 00D0     		beq	.L6
  78              	.LVL4:
  79              	.L1:
 125:segger/rtt/src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
 126:segger/rtt/src/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
 127:segger/rtt/src/SEGGER_RTT_printf.c ****     } else {
 128:segger/rtt/src/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 129:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 130:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 131:segger/rtt/src/SEGGER_RTT_printf.c **** }
  80              		.loc 1 131 1 view .LVU21
  81 0022 10BD     		pop	{r4, pc}
  82              	.LVL5:
  83              	.L6:
 125:segger/rtt/src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  84              		.loc 1 125 5 is_stmt 1 view .LVU22
 125:segger/rtt/src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  85              		.loc 1 125 9 is_stmt 0 view .LVU23
  86 0024 2168     		ldr	r1, [r4]
  87              	.LVL6:
 125:segger/rtt/src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  88              		.loc 1 125 9 view .LVU24
  89 0026 2069     		ldr	r0, [r4, #16]
  90 0028 FFF7FEFF 		bl	SEGGER_RTT_Write
  91              	.LVL7:
 125:segger/rtt/src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  92              		.loc 1 125 69 discriminator 1 view .LVU25
  93 002c A368     		ldr	r3, [r4, #8]
 125:segger/rtt/src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
ARM GAS  /tmp/ccqdLTlK.s 			page 5


  94              		.loc 1 125 8 discriminator 1 view .LVU26
  95 002e 9842     		cmp	r0, r3
  96 0030 03D0     		beq	.L4
 126:segger/rtt/src/SEGGER_RTT_printf.c ****     } else {
  97              		.loc 1 126 7 is_stmt 1 view .LVU27
 126:segger/rtt/src/SEGGER_RTT_printf.c ****     } else {
  98              		.loc 1 126 22 is_stmt 0 view .LVU28
  99 0032 4FF0FF33 		mov	r3, #-1
 100 0036 E360     		str	r3, [r4, #12]
 101 0038 F3E7     		b	.L1
 102              	.L4:
 128:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 103              		.loc 1 128 7 is_stmt 1 view .LVU29
 128:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 104              		.loc 1 128 14 is_stmt 0 view .LVU30
 105 003a 0023     		movs	r3, #0
 106 003c A360     		str	r3, [r4, #8]
 107              		.loc 1 131 1 view .LVU31
 108 003e F0E7     		b	.L1
 109              		.cfi_endproc
 110              	.LFE0:
 112              		.section	.text._PrintUnsigned,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	_PrintUnsigned:
 119              	.LVL8:
 120              	.LFB1:
 132:segger/rtt/src/SEGGER_RTT_printf.c **** 
 133:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 134:segger/rtt/src/SEGGER_RTT_printf.c **** *
 135:segger/rtt/src/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 136:segger/rtt/src/SEGGER_RTT_printf.c **** */
 137:segger/rtt/src/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 121              		.loc 1 137 156 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 8, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		.loc 1 137 156 is_stmt 0 view .LVU33
 126 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 40
 129              		.cfi_offset 3, -40
 130              		.cfi_offset 4, -36
 131              		.cfi_offset 5, -32
 132              		.cfi_offset 6, -28
 133              		.cfi_offset 7, -24
 134              		.cfi_offset 8, -20
 135              		.cfi_offset 9, -16
 136              		.cfi_offset 10, -12
 137              		.cfi_offset 11, -8
 138              		.cfi_offset 14, -4
 139 0004 8146     		mov	r9, r0
 140 0006 0F46     		mov	r7, r1
 141 0008 1546     		mov	r5, r2
 142 000a 1E46     		mov	r6, r3
ARM GAS  /tmp/ccqdLTlK.s 			page 6


 143 000c DDF828A0 		ldr	r10, [sp, #40]
 144 0010 0B9A     		ldr	r2, [sp, #44]
 145              	.LVL9:
 138:segger/rtt/src/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 146              		.loc 1 138 3 is_stmt 1 view .LVU34
 139:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned Div;
 147              		.loc 1 139 3 view .LVU35
 140:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned Digit;
 148              		.loc 1 140 3 view .LVU36
 141:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned Number;
 149              		.loc 1 141 3 view .LVU37
 142:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned Width;
 150              		.loc 1 142 3 view .LVU38
 143:segger/rtt/src/SEGGER_RTT_printf.c ****   char c;
 151              		.loc 1 143 3 view .LVU39
 144:segger/rtt/src/SEGGER_RTT_printf.c **** 
 145:segger/rtt/src/SEGGER_RTT_printf.c ****   Number = v;
 152              		.loc 1 145 3 view .LVU40
 146:segger/rtt/src/SEGGER_RTT_printf.c ****   Digit = 1u;
 153              		.loc 1 146 3 view .LVU41
 147:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 148:segger/rtt/src/SEGGER_RTT_printf.c ****   // Get actual field width
 149:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 150:segger/rtt/src/SEGGER_RTT_printf.c ****   Width = 1u;
 154              		.loc 1 150 3 view .LVU42
 151:segger/rtt/src/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 155              		.loc 1 151 3 view .LVU43
 145:segger/rtt/src/SEGGER_RTT_printf.c ****   Digit = 1u;
 156              		.loc 1 145 10 is_stmt 0 view .LVU44
 157 0012 0B46     		mov	r3, r1
 158              	.LVL10:
 150:segger/rtt/src/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 159              		.loc 1 150 9 view .LVU45
 160 0014 4FF00108 		mov	r8, #1
 161              		.loc 1 151 9 view .LVU46
 162 0018 03E0     		b	.L8
 163              	.LVL11:
 164              	.L9:
 152:segger/rtt/src/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 165              		.loc 1 152 5 is_stmt 1 view .LVU47
 166              		.loc 1 152 12 is_stmt 0 view .LVU48
 167 001a B3FBF5F3 		udiv	r3, r3, r5
 168              	.LVL12:
 153:segger/rtt/src/SEGGER_RTT_printf.c ****     Width++;
 169              		.loc 1 153 5 is_stmt 1 view .LVU49
 170              		.loc 1 153 10 is_stmt 0 view .LVU50
 171 001e 08F10108 		add	r8, r8, #1
 172              	.LVL13:
 173              	.L8:
 151:segger/rtt/src/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 174              		.loc 1 151 17 is_stmt 1 view .LVU51
 175 0022 AB42     		cmp	r3, r5
 176 0024 F9D2     		bcs	.L9
 154:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 155:segger/rtt/src/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 177              		.loc 1 155 3 view .LVU52
 178              		.loc 1 155 6 is_stmt 0 view .LVU53
ARM GAS  /tmp/ccqdLTlK.s 			page 7


 179 0026 B045     		cmp	r8, r6
 180 0028 00D2     		bcs	.L10
 156:segger/rtt/src/SEGGER_RTT_printf.c ****     Width = NumDigits;
 181              		.loc 1 156 11 view .LVU54
 182 002a B046     		mov	r8, r6
 183              	.LVL14:
 184              	.L10:
 157:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 158:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 159:segger/rtt/src/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 160:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 161:segger/rtt/src/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 185              		.loc 1 161 3 is_stmt 1 view .LVU55
 186              		.loc 1 161 6 is_stmt 0 view .LVU56
 187 002c 12F0010B 		ands	fp, r2, #1
 188 0030 18D1     		bne	.L11
 162:segger/rtt/src/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 189              		.loc 1 162 5 is_stmt 1 view .LVU57
 190              		.loc 1 162 8 is_stmt 0 view .LVU58
 191 0032 BAF1000F 		cmp	r10, #0
 192 0036 15D0     		beq	.L11
 163:segger/rtt/src/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 193              		.loc 1 163 7 is_stmt 1 view .LVU59
 194              		.loc 1 163 10 is_stmt 0 view .LVU60
 195 0038 12F0020F 		tst	r2, #2
 196 003c 02D0     		beq	.L24
 197              		.loc 1 163 74 discriminator 1 view .LVU61
 198 003e BEB1     		cbz	r6, .L25
 164:segger/rtt/src/SEGGER_RTT_printf.c ****         c = '0';
 165:segger/rtt/src/SEGGER_RTT_printf.c ****       } else {
 166:segger/rtt/src/SEGGER_RTT_printf.c ****         c = ' ';
 199              		.loc 1 166 11 view .LVU62
 200 0040 2024     		movs	r4, #32
 201 0042 00E0     		b	.L13
 202              	.L24:
 203 0044 2024     		movs	r4, #32
 204              	.LVL15:
 205              	.L13:
 167:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 168:segger/rtt/src/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 206              		.loc 1 168 33 is_stmt 1 view .LVU63
 207 0046 BAF1000F 		cmp	r10, #0
 208 004a 0BD0     		beq	.L11
 209              		.loc 1 168 33 is_stmt 0 discriminator 1 view .LVU64
 210 004c C245     		cmp	r10, r8
 211 004e 09D9     		bls	.L11
 169:segger/rtt/src/SEGGER_RTT_printf.c ****         FieldWidth--;
 212              		.loc 1 169 9 is_stmt 1 view .LVU65
 213              		.loc 1 169 19 is_stmt 0 view .LVU66
 214 0050 0AF1FF3A 		add	r10, r10, #-1
 215              	.LVL16:
 170:segger/rtt/src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 216              		.loc 1 170 9 is_stmt 1 view .LVU67
 217 0054 2146     		mov	r1, r4
 218 0056 4846     		mov	r0, r9
 219 0058 FFF7FEFF 		bl	_StoreChar
 220              	.LVL17:
ARM GAS  /tmp/ccqdLTlK.s 			page 8


 171:segger/rtt/src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 221              		.loc 1 171 9 view .LVU68
 222              		.loc 1 171 24 is_stmt 0 view .LVU69
 223 005c D9F80C30 		ldr	r3, [r9, #12]
 224              		.loc 1 171 12 view .LVU70
 225 0060 002B     		cmp	r3, #0
 226 0062 F0DA     		bge	.L13
 227              	.LVL18:
 228              	.L11:
 172:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 173:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 174:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 175:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 176:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 177:segger/rtt/src/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 229              		.loc 1 177 3 is_stmt 1 view .LVU71
 230              		.loc 1 177 18 is_stmt 0 view .LVU72
 231 0064 D9F80C30 		ldr	r3, [r9, #12]
 232              		.loc 1 177 6 view .LVU73
 233 0068 002B     		cmp	r3, #0
 234 006a 25DB     		blt	.L7
 146:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 235              		.loc 1 146 9 view .LVU74
 236 006c 0124     		movs	r4, #1
 237 006e 04E0     		b	.L19
 238              	.LVL19:
 239              	.L25:
 164:segger/rtt/src/SEGGER_RTT_printf.c ****       } else {
 240              		.loc 1 164 11 view .LVU75
 241 0070 3024     		movs	r4, #48
 242 0072 E8E7     		b	.L13
 243              	.LVL20:
 244              	.L28:
 178:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 179:segger/rtt/src/SEGGER_RTT_printf.c ****     // Compute Digit.
 180:segger/rtt/src/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 181:segger/rtt/src/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 182:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 183:segger/rtt/src/SEGGER_RTT_printf.c ****     while (1) {
 184:segger/rtt/src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 185:segger/rtt/src/SEGGER_RTT_printf.c ****         NumDigits--;
 245              		.loc 1 185 9 is_stmt 1 view .LVU76
 246              		.loc 1 185 18 is_stmt 0 view .LVU77
 247 0074 013E     		subs	r6, r6, #1
 248              	.LVL21:
 249              	.L17:
 186:segger/rtt/src/SEGGER_RTT_printf.c ****       } else {
 187:segger/rtt/src/SEGGER_RTT_printf.c ****         Div = v / Digit;
 188:segger/rtt/src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 189:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 190:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 191:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 192:segger/rtt/src/SEGGER_RTT_printf.c ****       Digit *= Base;
 250              		.loc 1 192 7 is_stmt 1 view .LVU78
 251              		.loc 1 192 13 is_stmt 0 view .LVU79
 252 0076 05FB04F4 		mul	r4, r5, r4
 253              	.LVL22:
ARM GAS  /tmp/ccqdLTlK.s 			page 9


 183:segger/rtt/src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 254              		.loc 1 183 11 is_stmt 1 view .LVU80
 255              	.L19:
 183:segger/rtt/src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 256              		.loc 1 183 5 view .LVU81
 184:segger/rtt/src/SEGGER_RTT_printf.c ****         NumDigits--;
 257              		.loc 1 184 7 view .LVU82
 184:segger/rtt/src/SEGGER_RTT_printf.c ****         NumDigits--;
 258              		.loc 1 184 10 is_stmt 0 view .LVU83
 259 007a 012E     		cmp	r6, #1
 260 007c FAD8     		bhi	.L28
 187:segger/rtt/src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 261              		.loc 1 187 9 is_stmt 1 view .LVU84
 187:segger/rtt/src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 262              		.loc 1 187 13 is_stmt 0 view .LVU85
 263 007e B7FBF4F3 		udiv	r3, r7, r4
 264              	.LVL23:
 188:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 265              		.loc 1 188 9 is_stmt 1 view .LVU86
 188:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 266              		.loc 1 188 12 is_stmt 0 view .LVU87
 267 0082 9D42     		cmp	r5, r3
 268 0084 F7D9     		bls	.L17
 269 0086 00E0     		b	.L18
 270              	.LVL24:
 271              	.L26:
 193:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 194:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 195:segger/rtt/src/SEGGER_RTT_printf.c ****     // Output digits
 196:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 197:segger/rtt/src/SEGGER_RTT_printf.c ****     do {
 198:segger/rtt/src/SEGGER_RTT_printf.c ****       Div = v / Digit;
 199:segger/rtt/src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 200:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 201:segger/rtt/src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 202:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 203:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 204:segger/rtt/src/SEGGER_RTT_printf.c ****       Digit /= Base;
 272              		.loc 1 204 13 view .LVU88
 273 0088 1C46     		mov	r4, r3
 274              	.LVL25:
 275              	.L18:
 197:segger/rtt/src/SEGGER_RTT_printf.c ****       Div = v / Digit;
 276              		.loc 1 197 5 is_stmt 1 view .LVU89
 198:segger/rtt/src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 277              		.loc 1 198 7 view .LVU90
 198:segger/rtt/src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 278              		.loc 1 198 11 is_stmt 0 view .LVU91
 279 008a B7FBF4F3 		udiv	r3, r7, r4
 280              	.LVL26:
 199:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 281              		.loc 1 199 7 is_stmt 1 view .LVU92
 282 008e 04FB1377 		mls	r7, r4, r3, r7
 283              	.LVL27:
 200:segger/rtt/src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 284              		.loc 1 200 7 view .LVU93
 285 0092 124A     		ldr	r2, .L29
ARM GAS  /tmp/ccqdLTlK.s 			page 10


 286 0094 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 287 0096 4846     		mov	r0, r9
 288 0098 FFF7FEFF 		bl	_StoreChar
 289              	.LVL28:
 201:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 290              		.loc 1 201 7 view .LVU94
 201:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 291              		.loc 1 201 22 is_stmt 0 view .LVU95
 292 009c D9F80C30 		ldr	r3, [r9, #12]
 201:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 293              		.loc 1 201 10 view .LVU96
 294 00a0 002B     		cmp	r3, #0
 295 00a2 03DB     		blt	.L20
 296              		.loc 1 204 7 is_stmt 1 view .LVU97
 297              		.loc 1 204 13 is_stmt 0 view .LVU98
 298 00a4 B4FBF5F3 		udiv	r3, r4, r5
 299              	.LVL29:
 205:segger/rtt/src/SEGGER_RTT_printf.c ****     } while (Digit);
 300              		.loc 1 205 14 is_stmt 1 view .LVU99
 301 00a8 AC42     		cmp	r4, r5
 302 00aa EDD2     		bcs	.L26
 303              	.LVL30:
 304              	.L20:
 206:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 207:segger/rtt/src/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 208:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 209:segger/rtt/src/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 305              		.loc 1 209 5 view .LVU100
 306              		.loc 1 209 8 is_stmt 0 view .LVU101
 307 00ac BBF1000F 		cmp	fp, #0
 308 00b0 02D0     		beq	.L7
 210:segger/rtt/src/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 309              		.loc 1 210 7 is_stmt 1 view .LVU102
 310              		.loc 1 210 10 is_stmt 0 view .LVU103
 311 00b2 BAF1000F 		cmp	r10, #0
 312 00b6 01D1     		bne	.L21
 313              	.LVL31:
 314              	.L7:
 211:segger/rtt/src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 212:segger/rtt/src/SEGGER_RTT_printf.c ****           FieldWidth--;
 213:segger/rtt/src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 214:segger/rtt/src/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 215:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 216:segger/rtt/src/SEGGER_RTT_printf.c ****           }
 217:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 218:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 219:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 220:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 221:segger/rtt/src/SEGGER_RTT_printf.c **** }
 315              		.loc 1 221 1 view .LVU104
 316 00b8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 317              	.LVL32:
 318              	.L21:
 211:segger/rtt/src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 319              		.loc 1 211 35 is_stmt 1 view .LVU105
 320 00bc BAF1000F 		cmp	r10, #0
 321 00c0 FAD0     		beq	.L7
ARM GAS  /tmp/ccqdLTlK.s 			page 11


 211:segger/rtt/src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 322              		.loc 1 211 35 is_stmt 0 discriminator 1 view .LVU106
 323 00c2 C245     		cmp	r10, r8
 324 00c4 F8D9     		bls	.L7
 212:segger/rtt/src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 325              		.loc 1 212 11 is_stmt 1 view .LVU107
 212:segger/rtt/src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 326              		.loc 1 212 21 is_stmt 0 view .LVU108
 327 00c6 0AF1FF3A 		add	r10, r10, #-1
 328              	.LVL33:
 213:segger/rtt/src/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 329              		.loc 1 213 11 is_stmt 1 view .LVU109
 330 00ca 2021     		movs	r1, #32
 331 00cc 4846     		mov	r0, r9
 332 00ce FFF7FEFF 		bl	_StoreChar
 333              	.LVL34:
 214:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 334              		.loc 1 214 11 view .LVU110
 214:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 335              		.loc 1 214 26 is_stmt 0 view .LVU111
 336 00d2 D9F80C30 		ldr	r3, [r9, #12]
 214:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 337              		.loc 1 214 14 view .LVU112
 338 00d6 002B     		cmp	r3, #0
 339 00d8 F0DA     		bge	.L21
 340 00da EDE7     		b	.L7
 341              	.L30:
 342              		.align	2
 343              	.L29:
 344 00dc 00000000 		.word	_aV2C.0
 345              		.cfi_endproc
 346              	.LFE1:
 348              		.section	.text._PrintInt,"ax",%progbits
 349              		.align	1
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	_PrintInt:
 355              	.LVL35:
 356              	.LFB2:
 222:segger/rtt/src/SEGGER_RTT_printf.c **** 
 223:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 224:segger/rtt/src/SEGGER_RTT_printf.c **** *
 225:segger/rtt/src/SEGGER_RTT_printf.c **** *       _PrintInt
 226:segger/rtt/src/SEGGER_RTT_printf.c **** */
 227:segger/rtt/src/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 357              		.loc 1 227 146 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 8, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		.loc 1 227 146 is_stmt 0 view .LVU114
 362 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 363              	.LCFI2:
 364              		.cfi_def_cfa_offset 32
 365              		.cfi_offset 4, -32
 366              		.cfi_offset 5, -28
 367              		.cfi_offset 6, -24
ARM GAS  /tmp/ccqdLTlK.s 			page 12


 368              		.cfi_offset 7, -20
 369              		.cfi_offset 8, -16
 370              		.cfi_offset 9, -12
 371              		.cfi_offset 10, -8
 372              		.cfi_offset 14, -4
 373 0004 82B0     		sub	sp, sp, #8
 374              	.LCFI3:
 375              		.cfi_def_cfa_offset 40
 376 0006 0746     		mov	r7, r0
 377 0008 8846     		mov	r8, r1
 378 000a 1546     		mov	r5, r2
 379 000c 9946     		mov	r9, r3
 380 000e 0A9E     		ldr	r6, [sp, #40]
 381 0010 DDF82CA0 		ldr	r10, [sp, #44]
 228:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned Width;
 382              		.loc 1 228 3 is_stmt 1 view .LVU115
 229:segger/rtt/src/SEGGER_RTT_printf.c ****   int Number;
 383              		.loc 1 229 3 view .LVU116
 230:segger/rtt/src/SEGGER_RTT_printf.c **** 
 231:segger/rtt/src/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 384              		.loc 1 231 3 view .LVU117
 385              		.loc 1 231 10 is_stmt 0 view .LVU118
 386 0014 81EAE17C 		eor	ip, r1, r1, asr #31
 387 0018 ACEBE17C 		sub	ip, ip, r1, asr #31
 388              	.LVL36:
 232:segger/rtt/src/SEGGER_RTT_printf.c **** 
 233:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 234:segger/rtt/src/SEGGER_RTT_printf.c ****   // Get actual field width
 235:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 236:segger/rtt/src/SEGGER_RTT_printf.c ****   Width = 1u;
 389              		.loc 1 236 3 is_stmt 1 view .LVU119
 237:segger/rtt/src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 390              		.loc 1 237 3 view .LVU120
 236:segger/rtt/src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 391              		.loc 1 236 9 is_stmt 0 view .LVU121
 392 001c 0124     		movs	r4, #1
 393              		.loc 1 237 9 view .LVU122
 394 001e 02E0     		b	.L32
 395              	.LVL37:
 396              	.L33:
 238:segger/rtt/src/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 397              		.loc 1 238 5 is_stmt 1 view .LVU123
 398              		.loc 1 238 12 is_stmt 0 view .LVU124
 399 0020 9CFBF5FC 		sdiv	ip, ip, r5
 400              	.LVL38:
 239:segger/rtt/src/SEGGER_RTT_printf.c ****     Width++;
 401              		.loc 1 239 5 is_stmt 1 view .LVU125
 402              		.loc 1 239 10 is_stmt 0 view .LVU126
 403 0024 0134     		adds	r4, r4, #1
 404              	.LVL39:
 405              	.L32:
 237:segger/rtt/src/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 406              		.loc 1 237 17 is_stmt 1 view .LVU127
 407 0026 6545     		cmp	r5, ip
 408 0028 FADD     		ble	.L33
 240:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 241:segger/rtt/src/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
ARM GAS  /tmp/ccqdLTlK.s 			page 13


 409              		.loc 1 241 3 view .LVU128
 410              		.loc 1 241 6 is_stmt 0 view .LVU129
 411 002a 4C45     		cmp	r4, r9
 412 002c 00D2     		bcs	.L34
 242:segger/rtt/src/SEGGER_RTT_printf.c ****     Width = NumDigits;
 413              		.loc 1 242 11 view .LVU130
 414 002e 4C46     		mov	r4, r9
 415              	.LVL40:
 416              	.L34:
 243:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 244:segger/rtt/src/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 417              		.loc 1 244 3 is_stmt 1 view .LVU131
 418              		.loc 1 244 6 is_stmt 0 view .LVU132
 419 0030 36B1     		cbz	r6, .L35
 420              		.loc 1 244 25 discriminator 1 view .LVU133
 421 0032 B8F1000F 		cmp	r8, #0
 422 0036 02DB     		blt	.L36
 423              		.loc 1 244 37 discriminator 2 view .LVU134
 424 0038 1AF0040F 		tst	r10, #4
 425 003c 00D0     		beq	.L35
 426              	.L36:
 245:segger/rtt/src/SEGGER_RTT_printf.c ****     FieldWidth--;
 427              		.loc 1 245 5 is_stmt 1 view .LVU135
 428              		.loc 1 245 15 is_stmt 0 view .LVU136
 429 003e 013E     		subs	r6, r6, #1
 430              	.LVL41:
 431              	.L35:
 246:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 247:segger/rtt/src/SEGGER_RTT_printf.c **** 
 248:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 249:segger/rtt/src/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 250:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 251:segger/rtt/src/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 432              		.loc 1 251 3 is_stmt 1 view .LVU137
 433              		.loc 1 251 6 is_stmt 0 view .LVU138
 434 0040 1AF0020F 		tst	r10, #2
 435 0044 02D0     		beq	.L37
 436              		.loc 1 251 53 discriminator 2 view .LVU139
 437 0046 B9F1000F 		cmp	r9, #0
 438 004a 03D0     		beq	.L38
 439              	.L37:
 440              		.loc 1 251 75 discriminator 3 view .LVU140
 441 004c 1AF0010F 		tst	r10, #1
 442 0050 00D1     		bne	.L38
 252:segger/rtt/src/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 443              		.loc 1 252 5 is_stmt 1 view .LVU141
 444              		.loc 1 252 8 is_stmt 0 view .LVU142
 445 0052 AEB9     		cbnz	r6, .L39
 446              	.LVL42:
 447              	.L38:
 253:segger/rtt/src/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 254:segger/rtt/src/SEGGER_RTT_printf.c ****         FieldWidth--;
 255:segger/rtt/src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 256:segger/rtt/src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 257:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 258:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 259:segger/rtt/src/SEGGER_RTT_printf.c ****       }
ARM GAS  /tmp/ccqdLTlK.s 			page 14


 260:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 261:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 262:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 263:segger/rtt/src/SEGGER_RTT_printf.c ****   // Print sign if necessary
 264:segger/rtt/src/SEGGER_RTT_printf.c ****   //
 265:segger/rtt/src/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 448              		.loc 1 265 3 is_stmt 1 view .LVU143
 449              		.loc 1 265 18 is_stmt 0 view .LVU144
 450 0054 FB68     		ldr	r3, [r7, #12]
 451              		.loc 1 265 6 view .LVU145
 452 0056 002B     		cmp	r3, #0
 453 0058 0FDB     		blt	.L31
 266:segger/rtt/src/SEGGER_RTT_printf.c ****     if (v < 0) {
 454              		.loc 1 266 5 is_stmt 1 view .LVU146
 455              		.loc 1 266 8 is_stmt 0 view .LVU147
 456 005a B8F1000F 		cmp	r8, #0
 457 005e 1CDB     		blt	.L49
 267:segger/rtt/src/SEGGER_RTT_printf.c ****       v = -v;
 268:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 269:segger/rtt/src/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 458              		.loc 1 269 12 is_stmt 1 view .LVU148
 459              		.loc 1 269 15 is_stmt 0 view .LVU149
 460 0060 1AF0040F 		tst	r10, #4
 461 0064 20D1     		bne	.L50
 462              	.L43:
 270:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 271:segger/rtt/src/SEGGER_RTT_printf.c ****     } else {
 272:segger/rtt/src/SEGGER_RTT_printf.c **** 
 273:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 463              		.loc 1 273 5 is_stmt 1 view .LVU150
 274:segger/rtt/src/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 464              		.loc 1 274 5 view .LVU151
 465              		.loc 1 274 20 is_stmt 0 view .LVU152
 466 0066 FB68     		ldr	r3, [r7, #12]
 467              		.loc 1 274 8 view .LVU153
 468 0068 002B     		cmp	r3, #0
 469 006a 06DB     		blt	.L31
 275:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 276:segger/rtt/src/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 277:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 278:segger/rtt/src/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 470              		.loc 1 278 7 is_stmt 1 view .LVU154
 471              		.loc 1 278 74 is_stmt 0 view .LVU155
 472 006c 0AF00303 		and	r3, r10, #3
 473              		.loc 1 278 10 view .LVU156
 474 0070 022B     		cmp	r3, #2
 475 0072 1ED0     		beq	.L51
 476              	.L44:
 279:segger/rtt/src/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 280:segger/rtt/src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 281:segger/rtt/src/SEGGER_RTT_printf.c ****             FieldWidth--;
 282:segger/rtt/src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 283:segger/rtt/src/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 284:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 285:segger/rtt/src/SEGGER_RTT_printf.c ****             }
 286:segger/rtt/src/SEGGER_RTT_printf.c ****           }
 287:segger/rtt/src/SEGGER_RTT_printf.c ****         }
ARM GAS  /tmp/ccqdLTlK.s 			page 15


 288:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 289:segger/rtt/src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 477              		.loc 1 289 7 is_stmt 1 view .LVU157
 478              		.loc 1 289 22 is_stmt 0 view .LVU158
 479 0074 FB68     		ldr	r3, [r7, #12]
 480              		.loc 1 289 10 view .LVU159
 481 0076 002B     		cmp	r3, #0
 482 0078 2DDA     		bge	.L52
 483              	.L31:
 290:segger/rtt/src/SEGGER_RTT_printf.c ****         //
 291:segger/rtt/src/SEGGER_RTT_printf.c ****         // Print number without sign
 292:segger/rtt/src/SEGGER_RTT_printf.c ****         //
 293:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 294:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 295:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 296:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 297:segger/rtt/src/SEGGER_RTT_printf.c **** }
 484              		.loc 1 297 1 view .LVU160
 485 007a 02B0     		add	sp, sp, #8
 486              	.LCFI4:
 487              		.cfi_remember_state
 488              		.cfi_def_cfa_offset 32
 489              		@ sp needed
 490 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 491              	.LVL43:
 492              	.L39:
 493              	.LCFI5:
 494              		.cfi_restore_state
 253:segger/rtt/src/SEGGER_RTT_printf.c ****         FieldWidth--;
 495              		.loc 1 253 33 is_stmt 1 view .LVU161
 496 0080 002E     		cmp	r6, #0
 497 0082 E7D0     		beq	.L38
 253:segger/rtt/src/SEGGER_RTT_printf.c ****         FieldWidth--;
 498              		.loc 1 253 33 is_stmt 0 discriminator 1 view .LVU162
 499 0084 A642     		cmp	r6, r4
 500 0086 E5D9     		bls	.L38
 254:segger/rtt/src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 501              		.loc 1 254 9 is_stmt 1 view .LVU163
 254:segger/rtt/src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 502              		.loc 1 254 19 is_stmt 0 view .LVU164
 503 0088 013E     		subs	r6, r6, #1
 504              	.LVL44:
 255:segger/rtt/src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 505              		.loc 1 255 9 is_stmt 1 view .LVU165
 506 008a 2021     		movs	r1, #32
 507 008c 3846     		mov	r0, r7
 508 008e FFF7FEFF 		bl	_StoreChar
 509              	.LVL45:
 256:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 510              		.loc 1 256 9 view .LVU166
 256:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 511              		.loc 1 256 24 is_stmt 0 view .LVU167
 512 0092 FB68     		ldr	r3, [r7, #12]
 256:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 513              		.loc 1 256 12 view .LVU168
 514 0094 002B     		cmp	r3, #0
 515 0096 F3DA     		bge	.L39
ARM GAS  /tmp/ccqdLTlK.s 			page 16


 516 0098 DCE7     		b	.L38
 517              	.L49:
 267:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 518              		.loc 1 267 7 is_stmt 1 view .LVU169
 267:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 519              		.loc 1 267 9 is_stmt 0 view .LVU170
 520 009a C8F10008 		rsb	r8, r8, #0
 521              	.LVL46:
 268:segger/rtt/src/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 522              		.loc 1 268 7 is_stmt 1 view .LVU171
 523 009e 2D21     		movs	r1, #45
 524 00a0 3846     		mov	r0, r7
 525 00a2 FFF7FEFF 		bl	_StoreChar
 526              	.LVL47:
 527 00a6 DEE7     		b	.L43
 528              	.L50:
 270:segger/rtt/src/SEGGER_RTT_printf.c ****     } else {
 529              		.loc 1 270 7 view .LVU172
 530 00a8 2B21     		movs	r1, #43
 531 00aa 3846     		mov	r0, r7
 532 00ac FFF7FEFF 		bl	_StoreChar
 533              	.LVL48:
 534 00b0 D9E7     		b	.L43
 535              	.L51:
 278:segger/rtt/src/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 536              		.loc 1 278 126 is_stmt 0 discriminator 1 view .LVU173
 537 00b2 B9F1000F 		cmp	r9, #0
 538 00b6 DDD1     		bne	.L44
 279:segger/rtt/src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 539              		.loc 1 279 9 is_stmt 1 view .LVU174
 279:segger/rtt/src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 540              		.loc 1 279 12 is_stmt 0 view .LVU175
 541 00b8 002E     		cmp	r6, #0
 542 00ba DBD0     		beq	.L44
 543              	.L45:
 280:segger/rtt/src/SEGGER_RTT_printf.c ****             FieldWidth--;
 544              		.loc 1 280 37 is_stmt 1 view .LVU176
 545 00bc 002E     		cmp	r6, #0
 546 00be D9D0     		beq	.L44
 280:segger/rtt/src/SEGGER_RTT_printf.c ****             FieldWidth--;
 547              		.loc 1 280 37 is_stmt 0 discriminator 1 view .LVU177
 548 00c0 A642     		cmp	r6, r4
 549 00c2 D7D9     		bls	.L44
 281:segger/rtt/src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 550              		.loc 1 281 13 is_stmt 1 view .LVU178
 281:segger/rtt/src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 551              		.loc 1 281 23 is_stmt 0 view .LVU179
 552 00c4 013E     		subs	r6, r6, #1
 553              	.LVL49:
 282:segger/rtt/src/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 554              		.loc 1 282 13 is_stmt 1 view .LVU180
 555 00c6 3021     		movs	r1, #48
 556 00c8 3846     		mov	r0, r7
 557 00ca FFF7FEFF 		bl	_StoreChar
 558              	.LVL50:
 283:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 559              		.loc 1 283 13 view .LVU181
ARM GAS  /tmp/ccqdLTlK.s 			page 17


 283:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 560              		.loc 1 283 28 is_stmt 0 view .LVU182
 561 00ce FB68     		ldr	r3, [r7, #12]
 283:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 562              		.loc 1 283 16 view .LVU183
 563 00d0 002B     		cmp	r3, #0
 564 00d2 F3DA     		bge	.L45
 565 00d4 CEE7     		b	.L44
 566              	.L52:
 293:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 567              		.loc 1 293 9 is_stmt 1 view .LVU184
 568 00d6 CDF804A0 		str	r10, [sp, #4]
 569 00da 0096     		str	r6, [sp]
 570 00dc 4B46     		mov	r3, r9
 571 00de 2A46     		mov	r2, r5
 572 00e0 4146     		mov	r1, r8
 573 00e2 3846     		mov	r0, r7
 574 00e4 FFF7FEFF 		bl	_PrintUnsigned
 575              	.LVL51:
 576              		.loc 1 297 1 is_stmt 0 view .LVU185
 577 00e8 C7E7     		b	.L31
 578              		.cfi_endproc
 579              	.LFE2:
 581              		.section	.rodata.SEGGER_RTT_vprintf.str1.4,"aMS",%progbits,1
 582              		.align	2
 583              	.LC0:
 584 0000 284E554C 		.ascii	"(NULL)\000"
 584      4C2900
 585              		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 586              		.align	1
 587              		.global	SEGGER_RTT_vprintf
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	SEGGER_RTT_vprintf:
 593              	.LVL52:
 594              	.LFB3:
 298:segger/rtt/src/SEGGER_RTT_printf.c **** 
 299:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 300:segger/rtt/src/SEGGER_RTT_printf.c **** *
 301:segger/rtt/src/SEGGER_RTT_printf.c **** *       Public code
 302:segger/rtt/src/SEGGER_RTT_printf.c **** *
 303:segger/rtt/src/SEGGER_RTT_printf.c **** **********************************************************************
 304:segger/rtt/src/SEGGER_RTT_printf.c **** */
 305:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 306:segger/rtt/src/SEGGER_RTT_printf.c **** *
 307:segger/rtt/src/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 308:segger/rtt/src/SEGGER_RTT_printf.c **** *
 309:segger/rtt/src/SEGGER_RTT_printf.c **** *  Function description
 310:segger/rtt/src/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 311:segger/rtt/src/SEGGER_RTT_printf.c **** *    This data is read by the host.
 312:segger/rtt/src/SEGGER_RTT_printf.c **** *
 313:segger/rtt/src/SEGGER_RTT_printf.c **** *  Parameters
 314:segger/rtt/src/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 315:segger/rtt/src/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 316:segger/rtt/src/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 317:segger/rtt/src/SEGGER_RTT_printf.c **** *
ARM GAS  /tmp/ccqdLTlK.s 			page 18


 318:segger/rtt/src/SEGGER_RTT_printf.c **** *  Return values
 319:segger/rtt/src/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 320:segger/rtt/src/SEGGER_RTT_printf.c **** *     < 0:  Error
 321:segger/rtt/src/SEGGER_RTT_printf.c **** */
 322:segger/rtt/src/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 595              		.loc 1 322 90 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 88
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		.loc 1 322 90 is_stmt 0 view .LVU187
 600 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 601              	.LCFI6:
 602              		.cfi_def_cfa_offset 20
 603              		.cfi_offset 4, -20
 604              		.cfi_offset 5, -16
 605              		.cfi_offset 6, -12
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 99B0     		sub	sp, sp, #100
 609              	.LCFI7:
 610              		.cfi_def_cfa_offset 120
 611 0004 0646     		mov	r6, r0
 612 0006 0C46     		mov	r4, r1
 613 0008 1546     		mov	r5, r2
 323:segger/rtt/src/SEGGER_RTT_printf.c ****   char c;
 614              		.loc 1 323 3 is_stmt 1 view .LVU188
 324:segger/rtt/src/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 615              		.loc 1 324 3 view .LVU189
 325:segger/rtt/src/SEGGER_RTT_printf.c ****   int v;
 616              		.loc 1 325 3 view .LVU190
 326:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 617              		.loc 1 326 3 view .LVU191
 327:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 618              		.loc 1 327 3 view .LVU192
 328:segger/rtt/src/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 619              		.loc 1 328 3 view .LVU193
 329:segger/rtt/src/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 620              		.loc 1 329 3 view .LVU194
 330:segger/rtt/src/SEGGER_RTT_printf.c **** 
 331:segger/rtt/src/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 621              		.loc 1 331 3 view .LVU195
 622              		.loc 1 331 29 is_stmt 0 view .LVU196
 623 000a 03AB     		add	r3, sp, #12
 624 000c 1393     		str	r3, [sp, #76]
 332:segger/rtt/src/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 625              		.loc 1 332 3 is_stmt 1 view .LVU197
 626              		.loc 1 332 29 is_stmt 0 view .LVU198
 627 000e 4023     		movs	r3, #64
 628 0010 1493     		str	r3, [sp, #80]
 333:segger/rtt/src/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 629              		.loc 1 333 3 is_stmt 1 view .LVU199
 630              		.loc 1 333 29 is_stmt 0 view .LVU200
 631 0012 0023     		movs	r3, #0
 632 0014 1593     		str	r3, [sp, #84]
 334:segger/rtt/src/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 633              		.loc 1 334 3 is_stmt 1 view .LVU201
 634              		.loc 1 334 29 is_stmt 0 view .LVU202
ARM GAS  /tmp/ccqdLTlK.s 			page 19


 635 0016 1790     		str	r0, [sp, #92]
 335:segger/rtt/src/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 636              		.loc 1 335 3 is_stmt 1 view .LVU203
 637              		.loc 1 335 29 is_stmt 0 view .LVU204
 638 0018 1693     		str	r3, [sp, #88]
 639 001a 8BE0     		b	.L82
 640              	.LVL53:
 641              	.L92:
 336:segger/rtt/src/SEGGER_RTT_printf.c **** 
 337:segger/rtt/src/SEGGER_RTT_printf.c ****   do {
 338:segger/rtt/src/SEGGER_RTT_printf.c ****     c = *sFormat;
 339:segger/rtt/src/SEGGER_RTT_printf.c ****     sFormat++;
 340:segger/rtt/src/SEGGER_RTT_printf.c ****     if (c == 0u) {
 341:segger/rtt/src/SEGGER_RTT_printf.c ****       break;
 342:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 343:segger/rtt/src/SEGGER_RTT_printf.c ****     if (c == '%') {
 344:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 345:segger/rtt/src/SEGGER_RTT_printf.c ****       // Filter out flags
 346:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 347:segger/rtt/src/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 642              		.loc 1 347 19 view .LVU205
 643 001c 0020     		movs	r0, #0
 348:segger/rtt/src/SEGGER_RTT_printf.c ****       v = 1;
 644              		.loc 1 348 9 view .LVU206
 645 001e 0122     		movs	r2, #1
 646 0020 11E0     		b	.L62
 647              	.LVL54:
 648              	.L59:
 349:segger/rtt/src/SEGGER_RTT_printf.c ****       do {
 350:segger/rtt/src/SEGGER_RTT_printf.c ****         c = *sFormat;
 351:segger/rtt/src/SEGGER_RTT_printf.c ****         switch (c) {
 352:segger/rtt/src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 649              		.loc 1 352 19 is_stmt 1 view .LVU207
 650              		.loc 1 352 31 is_stmt 0 view .LVU208
 651 0022 40F00100 		orr	r0, r0, #1
 652              	.LVL55:
 653              		.loc 1 352 60 is_stmt 1 view .LVU209
 654              		.loc 1 352 67 is_stmt 0 view .LVU210
 655 0026 0134     		adds	r4, r4, #1
 656              	.LVL56:
 657              		.loc 1 352 71 is_stmt 1 view .LVU211
 658 0028 0CE0     		b	.L56
 659              	.LVL57:
 660              	.L57:
 353:segger/rtt/src/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 661              		.loc 1 353 19 view .LVU212
 662              		.loc 1 353 31 is_stmt 0 view .LVU213
 663 002a 40F00200 		orr	r0, r0, #2
 664              	.LVL58:
 665              		.loc 1 353 60 is_stmt 1 view .LVU214
 666              		.loc 1 353 67 is_stmt 0 view .LVU215
 667 002e 0134     		adds	r4, r4, #1
 668              	.LVL59:
 669              		.loc 1 353 71 is_stmt 1 view .LVU216
 670 0030 08E0     		b	.L56
 671              	.LVL60:
 672              	.L60:
ARM GAS  /tmp/ccqdLTlK.s 			page 20


 354:segger/rtt/src/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 673              		.loc 1 354 19 view .LVU217
 674              		.loc 1 354 31 is_stmt 0 view .LVU218
 675 0032 40F00400 		orr	r0, r0, #4
 676              	.LVL61:
 677              		.loc 1 354 60 is_stmt 1 view .LVU219
 678              		.loc 1 354 67 is_stmt 0 view .LVU220
 679 0036 0134     		adds	r4, r4, #1
 680              	.LVL62:
 681              		.loc 1 354 71 is_stmt 1 view .LVU221
 682 0038 04E0     		b	.L56
 683              	.LVL63:
 684              	.L61:
 355:segger/rtt/src/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 685              		.loc 1 355 19 view .LVU222
 686              		.loc 1 355 31 is_stmt 0 view .LVU223
 687 003a 40F00800 		orr	r0, r0, #8
 688              	.LVL64:
 689              		.loc 1 355 60 is_stmt 1 view .LVU224
 690              		.loc 1 355 67 is_stmt 0 view .LVU225
 691 003e 0134     		adds	r4, r4, #1
 692              	.LVL65:
 693              		.loc 1 355 71 is_stmt 1 view .LVU226
 694 0040 00E0     		b	.L56
 695              	.LVL66:
 696              	.L85:
 351:segger/rtt/src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 697              		.loc 1 351 9 is_stmt 0 view .LVU227
 698 0042 0022     		movs	r2, #0
 699              	.LVL67:
 700              	.L56:
 356:segger/rtt/src/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 357:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 358:segger/rtt/src/SEGGER_RTT_printf.c ****       } while (v);
 701              		.loc 1 358 16 is_stmt 1 view .LVU228
 702 0044 12B3     		cbz	r2, .L64
 703              	.LVL68:
 704              	.L62:
 349:segger/rtt/src/SEGGER_RTT_printf.c ****         c = *sFormat;
 705              		.loc 1 349 7 view .LVU229
 350:segger/rtt/src/SEGGER_RTT_printf.c ****         switch (c) {
 706              		.loc 1 350 9 view .LVU230
 350:segger/rtt/src/SEGGER_RTT_printf.c ****         switch (c) {
 707              		.loc 1 350 11 is_stmt 0 view .LVU231
 708 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 709              	.LVL69:
 351:segger/rtt/src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 710              		.loc 1 351 9 is_stmt 1 view .LVU232
 711 0048 233B     		subs	r3, r3, #35
 712 004a 0D2B     		cmp	r3, #13
 713 004c F9D8     		bhi	.L85
 714 004e 01A1     		adr	r1, .L58
 715 0050 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 716              		.p2align 2
 717              	.L58:
 718 0054 3B000000 		.word	.L61+1
 719 0058 43000000 		.word	.L85+1
ARM GAS  /tmp/ccqdLTlK.s 			page 21


 720 005c 43000000 		.word	.L85+1
 721 0060 43000000 		.word	.L85+1
 722 0064 43000000 		.word	.L85+1
 723 0068 43000000 		.word	.L85+1
 724 006c 43000000 		.word	.L85+1
 725 0070 43000000 		.word	.L85+1
 726 0074 33000000 		.word	.L60+1
 727 0078 43000000 		.word	.L85+1
 728 007c 23000000 		.word	.L59+1
 729 0080 43000000 		.word	.L85+1
 730 0084 43000000 		.word	.L85+1
 731 0088 2B000000 		.word	.L57+1
 732              	.LVL70:
 733              		.p2align 1
 734              	.L64:
 359:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 360:segger/rtt/src/SEGGER_RTT_printf.c ****       // filter out field with
 361:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 362:segger/rtt/src/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 363:segger/rtt/src/SEGGER_RTT_printf.c ****       do {
 735              		.loc 1 363 7 view .LVU233
 364:segger/rtt/src/SEGGER_RTT_printf.c ****         c = *sFormat;
 736              		.loc 1 364 9 view .LVU234
 737              		.loc 1 364 11 is_stmt 0 view .LVU235
 738 008c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 739              	.LVL71:
 365:segger/rtt/src/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 740              		.loc 1 365 9 is_stmt 1 view .LVU236
 741              		.loc 1 365 23 is_stmt 0 view .LVU237
 742 008e A3F13001 		sub	r1, r3, #48
 743 0092 C9B2     		uxtb	r1, r1
 744              		.loc 1 365 12 view .LVU238
 745 0094 0929     		cmp	r1, #9
 746 0096 07D8     		bhi	.L63
 366:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 367:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 368:segger/rtt/src/SEGGER_RTT_printf.c ****         sFormat++;
 747              		.loc 1 368 9 is_stmt 1 view .LVU239
 748              		.loc 1 368 16 is_stmt 0 view .LVU240
 749 0098 0134     		adds	r4, r4, #1
 750              	.LVL72:
 369:segger/rtt/src/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 751              		.loc 1 369 9 is_stmt 1 view .LVU241
 752              		.loc 1 369 34 is_stmt 0 view .LVU242
 753 009a 02EB8202 		add	r2, r2, r2, lsl #2
 754              	.LVL73:
 755              		.loc 1 369 41 view .LVU243
 756 009e 03EB4203 		add	r3, r3, r2, lsl #1
 757              	.LVL74:
 758              		.loc 1 369 20 view .LVU244
 759 00a2 A3F13002 		sub	r2, r3, #48
 760              	.LVL75:
 363:segger/rtt/src/SEGGER_RTT_printf.c ****         c = *sFormat;
 761              		.loc 1 363 10 is_stmt 1 view .LVU245
 364:segger/rtt/src/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 762              		.loc 1 364 11 is_stmt 0 view .LVU246
 763 00a6 F1E7     		b	.L64
ARM GAS  /tmp/ccqdLTlK.s 			page 22


 764              	.LVL76:
 765              	.L63:
 370:segger/rtt/src/SEGGER_RTT_printf.c ****       } while (1);
 371:segger/rtt/src/SEGGER_RTT_printf.c **** 
 372:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 373:segger/rtt/src/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 374:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 375:segger/rtt/src/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 766              		.loc 1 375 7 is_stmt 1 view .LVU247
 376:segger/rtt/src/SEGGER_RTT_printf.c ****       c = *sFormat;
 767              		.loc 1 376 7 view .LVU248
 377:segger/rtt/src/SEGGER_RTT_printf.c ****       if (c == '.') {
 768              		.loc 1 377 7 view .LVU249
 769              		.loc 1 377 10 is_stmt 0 view .LVU250
 770 00a8 2E2B     		cmp	r3, #46
 771 00aa 02D0     		beq	.L90
 375:segger/rtt/src/SEGGER_RTT_printf.c ****       c = *sFormat;
 772              		.loc 1 375 17 view .LVU251
 773 00ac 0023     		movs	r3, #0
 774              	.LVL77:
 775              	.L65:
 378:segger/rtt/src/SEGGER_RTT_printf.c ****         sFormat++;
 379:segger/rtt/src/SEGGER_RTT_printf.c ****         do {
 380:segger/rtt/src/SEGGER_RTT_printf.c ****           c = *sFormat;
 381:segger/rtt/src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 382:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 383:segger/rtt/src/SEGGER_RTT_printf.c ****           }
 384:segger/rtt/src/SEGGER_RTT_printf.c ****           sFormat++;
 385:segger/rtt/src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 386:segger/rtt/src/SEGGER_RTT_printf.c ****         } while (1);
 387:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 388:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 389:segger/rtt/src/SEGGER_RTT_printf.c ****       // Filter out length modifier
 390:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 391:segger/rtt/src/SEGGER_RTT_printf.c ****       c = *sFormat;
 776              		.loc 1 391 7 is_stmt 1 view .LVU252
 777              		.loc 1 391 9 is_stmt 0 view .LVU253
 778 00ae 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 779              	.LVL78:
 780              		.loc 1 391 9 view .LVU254
 781 00b0 14E0     		b	.L69
 782              	.LVL79:
 783              	.L90:
 378:segger/rtt/src/SEGGER_RTT_printf.c ****         sFormat++;
 784              		.loc 1 378 9 is_stmt 1 view .LVU255
 378:segger/rtt/src/SEGGER_RTT_printf.c ****         sFormat++;
 785              		.loc 1 378 16 is_stmt 0 view .LVU256
 786 00b2 0134     		adds	r4, r4, #1
 787              	.LVL80:
 375:segger/rtt/src/SEGGER_RTT_printf.c ****       c = *sFormat;
 788              		.loc 1 375 17 view .LVU257
 789 00b4 0023     		movs	r3, #0
 790              	.LVL81:
 375:segger/rtt/src/SEGGER_RTT_printf.c ****       c = *sFormat;
 791              		.loc 1 375 17 view .LVU258
 792 00b6 06E0     		b	.L66
 793              	.LVL82:
ARM GAS  /tmp/ccqdLTlK.s 			page 23


 794              	.L91:
 384:segger/rtt/src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 795              		.loc 1 384 11 is_stmt 1 view .LVU259
 384:segger/rtt/src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 796              		.loc 1 384 18 is_stmt 0 view .LVU260
 797 00b8 0134     		adds	r4, r4, #1
 798              	.LVL83:
 385:segger/rtt/src/SEGGER_RTT_printf.c ****         } while (1);
 799              		.loc 1 385 11 is_stmt 1 view .LVU261
 385:segger/rtt/src/SEGGER_RTT_printf.c ****         } while (1);
 800              		.loc 1 385 33 is_stmt 0 view .LVU262
 801 00ba 03EB8303 		add	r3, r3, r3, lsl #2
 802              	.LVL84:
 385:segger/rtt/src/SEGGER_RTT_printf.c ****         } while (1);
 803              		.loc 1 385 39 view .LVU263
 804 00be 01EB4301 		add	r1, r1, r3, lsl #1
 805              	.LVL85:
 385:segger/rtt/src/SEGGER_RTT_printf.c ****         } while (1);
 806              		.loc 1 385 21 view .LVU264
 807 00c2 A1F13003 		sub	r3, r1, #48
 808              	.LVL86:
 379:segger/rtt/src/SEGGER_RTT_printf.c ****           c = *sFormat;
 809              		.loc 1 379 12 is_stmt 1 view .LVU265
 810              	.L66:
 379:segger/rtt/src/SEGGER_RTT_printf.c ****           c = *sFormat;
 811              		.loc 1 379 9 view .LVU266
 380:segger/rtt/src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 812              		.loc 1 380 11 view .LVU267
 380:segger/rtt/src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 813              		.loc 1 380 13 is_stmt 0 view .LVU268
 814 00c6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 815              	.LVL87:
 381:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 816              		.loc 1 381 11 is_stmt 1 view .LVU269
 381:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 817              		.loc 1 381 25 is_stmt 0 view .LVU270
 818 00c8 A1F1300C 		sub	ip, r1, #48
 819 00cc 5FFA8CFC 		uxtb	ip, ip
 381:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 820              		.loc 1 381 14 view .LVU271
 821 00d0 BCF1090F 		cmp	ip, #9
 822 00d4 F0D9     		bls	.L91
 381:segger/rtt/src/SEGGER_RTT_printf.c ****             break;
 823              		.loc 1 381 14 view .LVU272
 824 00d6 EAE7     		b	.L65
 825              	.L67:
 392:segger/rtt/src/SEGGER_RTT_printf.c ****       do {
 393:segger/rtt/src/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 394:segger/rtt/src/SEGGER_RTT_printf.c ****           sFormat++;
 826              		.loc 1 394 11 is_stmt 1 view .LVU273
 827              	.LVL88:
 395:segger/rtt/src/SEGGER_RTT_printf.c ****           c = *sFormat;
 828              		.loc 1 395 11 view .LVU274
 829              		.loc 1 395 13 is_stmt 0 view .LVU275
 830 00d8 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 831              	.LVL89:
 392:segger/rtt/src/SEGGER_RTT_printf.c ****       do {
ARM GAS  /tmp/ccqdLTlK.s 			page 24


 832              		.loc 1 392 10 is_stmt 1 view .LVU276
 833              	.L69:
 392:segger/rtt/src/SEGGER_RTT_printf.c ****       do {
 834              		.loc 1 392 7 view .LVU277
 393:segger/rtt/src/SEGGER_RTT_printf.c ****           sFormat++;
 835              		.loc 1 393 9 view .LVU278
 393:segger/rtt/src/SEGGER_RTT_printf.c ****           sFormat++;
 836              		.loc 1 393 12 is_stmt 0 view .LVU279
 837 00dc 6C29     		cmp	r1, #108
 838 00de FBD0     		beq	.L67
 393:segger/rtt/src/SEGGER_RTT_printf.c ****           sFormat++;
 839              		.loc 1 393 24 discriminator 1 view .LVU280
 840 00e0 6829     		cmp	r1, #104
 841 00e2 F9D0     		beq	.L67
 396:segger/rtt/src/SEGGER_RTT_printf.c ****         } else {
 397:segger/rtt/src/SEGGER_RTT_printf.c ****           break;
 398:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 399:segger/rtt/src/SEGGER_RTT_printf.c ****       } while (1);
 400:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 401:segger/rtt/src/SEGGER_RTT_printf.c ****       // Handle specifiers
 402:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 403:segger/rtt/src/SEGGER_RTT_printf.c ****       switch (c) {
 842              		.loc 1 403 7 is_stmt 1 view .LVU281
 843 00e4 2529     		cmp	r1, #37
 844 00e6 70D0     		beq	.L70
 845 00e8 20D3     		bcc	.L71
 846 00ea 7829     		cmp	r1, #120
 847 00ec 1ED8     		bhi	.L71
 848 00ee 5829     		cmp	r1, #88
 849 00f0 1CD3     		bcc	.L71
 850 00f2 5839     		subs	r1, r1, #88
 851              	.LVL90:
 852              		.loc 1 403 7 is_stmt 0 view .LVU282
 853 00f4 2029     		cmp	r1, #32
 854 00f6 19D8     		bhi	.L71
 855 00f8 DFE801F0 		tbb	[pc, r1]
 856              	.L73:
 857 00fc 3D       		.byte	(.L72-.L73)/2
 858 00fd 18       		.byte	(.L71-.L73)/2
 859 00fe 18       		.byte	(.L71-.L73)/2
 860 00ff 18       		.byte	(.L71-.L73)/2
 861 0100 18       		.byte	(.L71-.L73)/2
 862 0101 18       		.byte	(.L71-.L73)/2
 863 0102 18       		.byte	(.L71-.L73)/2
 864 0103 18       		.byte	(.L71-.L73)/2
 865 0104 18       		.byte	(.L71-.L73)/2
 866 0105 18       		.byte	(.L71-.L73)/2
 867 0106 18       		.byte	(.L71-.L73)/2
 868 0107 11       		.byte	(.L78-.L73)/2
 869 0108 27       		.byte	(.L77-.L73)/2
 870 0109 18       		.byte	(.L71-.L73)/2
 871 010a 18       		.byte	(.L71-.L73)/2
 872 010b 18       		.byte	(.L71-.L73)/2
 873 010c 18       		.byte	(.L71-.L73)/2
 874 010d 18       		.byte	(.L71-.L73)/2
 875 010e 18       		.byte	(.L71-.L73)/2
 876 010f 18       		.byte	(.L71-.L73)/2
ARM GAS  /tmp/ccqdLTlK.s 			page 25


 877 0110 18       		.byte	(.L71-.L73)/2
 878 0111 18       		.byte	(.L71-.L73)/2
 879 0112 18       		.byte	(.L71-.L73)/2
 880 0113 18       		.byte	(.L71-.L73)/2
 881 0114 5A       		.byte	(.L76-.L73)/2
 882 0115 18       		.byte	(.L71-.L73)/2
 883 0116 18       		.byte	(.L71-.L73)/2
 884 0117 48       		.byte	(.L75-.L73)/2
 885 0118 18       		.byte	(.L71-.L73)/2
 886 0119 32       		.byte	(.L74-.L73)/2
 887 011a 18       		.byte	(.L71-.L73)/2
 888 011b 18       		.byte	(.L71-.L73)/2
 889 011c 3D       		.byte	(.L72-.L73)/2
 890 011d 00       		.p2align 1
 891              	.L78:
 892              	.LBB2:
 404:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'c': {
 405:segger/rtt/src/SEGGER_RTT_printf.c ****         char c0;
 893              		.loc 1 405 9 is_stmt 1 view .LVU283
 406:segger/rtt/src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 894              		.loc 1 406 9 view .LVU284
 895              		.loc 1 406 11 is_stmt 0 view .LVU285
 896 011e 2B68     		ldr	r3, [r5]
 897              	.LVL91:
 898              		.loc 1 406 11 view .LVU286
 899 0120 1A1D     		adds	r2, r3, #4
 900              	.LVL92:
 901              		.loc 1 406 11 view .LVU287
 902 0122 2A60     		str	r2, [r5]
 903              	.LVL93:
 407:segger/rtt/src/SEGGER_RTT_printf.c ****         c0 = (char)v;
 904              		.loc 1 407 9 is_stmt 1 view .LVU288
 408:segger/rtt/src/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 905              		.loc 1 408 9 view .LVU289
 906 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 907              	.LVL94:
 908              		.loc 1 408 9 is_stmt 0 view .LVU290
 909 0126 13A8     		add	r0, sp, #76
 910              	.LVL95:
 911              		.loc 1 408 9 view .LVU291
 912 0128 FFF7FEFF 		bl	_StoreChar
 913              	.LVL96:
 409:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 914              		.loc 1 409 9 is_stmt 1 view .LVU292
 915              	.L71:
 916              		.loc 1 409 9 is_stmt 0 view .LVU293
 917              	.LBE2:
 410:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 411:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'd':
 412:segger/rtt/src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 413:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 414:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 415:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'u':
 416:segger/rtt/src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 417:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 418:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 419:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'x':
ARM GAS  /tmp/ccqdLTlK.s 			page 26


 420:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'X':
 421:segger/rtt/src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 422:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 423:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 424:segger/rtt/src/SEGGER_RTT_printf.c ****       case 's':
 425:segger/rtt/src/SEGGER_RTT_printf.c ****         {
 426:segger/rtt/src/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 427:segger/rtt/src/SEGGER_RTT_printf.c ****           if (s == NULL) {
 428:segger/rtt/src/SEGGER_RTT_printf.c ****             s = "(NULL)";  // Print (NULL) instead of crashing or breaking, as it is more informati
 429:segger/rtt/src/SEGGER_RTT_printf.c ****           }
 430:segger/rtt/src/SEGGER_RTT_printf.c ****           do {
 431:segger/rtt/src/SEGGER_RTT_printf.c ****             c = *s;
 432:segger/rtt/src/SEGGER_RTT_printf.c ****             s++;
 433:segger/rtt/src/SEGGER_RTT_printf.c ****             if (c == '\0') {
 434:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 435:segger/rtt/src/SEGGER_RTT_printf.c ****             }
 436:segger/rtt/src/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 437:segger/rtt/src/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 438:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 439:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 440:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'p':
 441:segger/rtt/src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 442:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 443:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 444:segger/rtt/src/SEGGER_RTT_printf.c ****       case '%':
 445:segger/rtt/src/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 446:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 447:segger/rtt/src/SEGGER_RTT_printf.c ****       default:
 448:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 449:segger/rtt/src/SEGGER_RTT_printf.c ****       }
 450:segger/rtt/src/SEGGER_RTT_printf.c ****       sFormat++;
 918              		.loc 1 450 7 is_stmt 1 view .LVU294
 919              		.loc 1 450 14 is_stmt 0 view .LVU295
 920 012c 0134     		adds	r4, r4, #1
 921              	.LVL97:
 922              	.L81:
 451:segger/rtt/src/SEGGER_RTT_printf.c ****     } else {
 452:segger/rtt/src/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 453:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 454:segger/rtt/src/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 923              		.loc 1 454 35 is_stmt 1 view .LVU296
 924              		.loc 1 454 22 is_stmt 0 view .LVU297
 925 012e 169B     		ldr	r3, [sp, #88]
 926              		.loc 1 454 35 view .LVU298
 927 0130 002B     		cmp	r3, #0
 928 0132 4FDB     		blt	.L54
 929              	.L82:
 337:segger/rtt/src/SEGGER_RTT_printf.c ****     c = *sFormat;
 930              		.loc 1 337 3 is_stmt 1 view .LVU299
 338:segger/rtt/src/SEGGER_RTT_printf.c ****     sFormat++;
 931              		.loc 1 338 5 view .LVU300
 338:segger/rtt/src/SEGGER_RTT_printf.c ****     sFormat++;
 932              		.loc 1 338 7 is_stmt 0 view .LVU301
 933 0134 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 934              	.LVL98:
 339:segger/rtt/src/SEGGER_RTT_printf.c ****     if (c == 0u) {
 935              		.loc 1 339 5 is_stmt 1 view .LVU302
ARM GAS  /tmp/ccqdLTlK.s 			page 27


 340:segger/rtt/src/SEGGER_RTT_printf.c ****       break;
 936              		.loc 1 340 5 view .LVU303
 340:segger/rtt/src/SEGGER_RTT_printf.c ****       break;
 937              		.loc 1 340 8 is_stmt 0 view .LVU304
 938 0138 0029     		cmp	r1, #0
 939 013a 4BD0     		beq	.L54
 343:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 940              		.loc 1 343 5 is_stmt 1 view .LVU305
 343:segger/rtt/src/SEGGER_RTT_printf.c ****       //
 941              		.loc 1 343 8 is_stmt 0 view .LVU306
 942 013c 2529     		cmp	r1, #37
 943 013e 3FF46DAF 		beq	.L92
 452:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 944              		.loc 1 452 7 is_stmt 1 view .LVU307
 945 0142 13A8     		add	r0, sp, #76
 946 0144 FFF7FEFF 		bl	_StoreChar
 947              	.LVL99:
 452:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 948              		.loc 1 452 7 is_stmt 0 view .LVU308
 949 0148 F1E7     		b	.L81
 950              	.LVL100:
 951              	.L77:
 412:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 952              		.loc 1 412 9 is_stmt 1 view .LVU309
 412:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 953              		.loc 1 412 11 is_stmt 0 view .LVU310
 954 014a 2968     		ldr	r1, [r5]
 955              	.LVL101:
 412:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 956              		.loc 1 412 11 view .LVU311
 957 014c 0F1D     		adds	r7, r1, #4
 958 014e 2F60     		str	r7, [r5]
 959 0150 0968     		ldr	r1, [r1]
 960              	.LVL102:
 413:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 961              		.loc 1 413 9 is_stmt 1 view .LVU312
 962 0152 0190     		str	r0, [sp, #4]
 963 0154 0092     		str	r2, [sp]
 964 0156 0A22     		movs	r2, #10
 965              	.LVL103:
 413:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 966              		.loc 1 413 9 is_stmt 0 view .LVU313
 967 0158 13A8     		add	r0, sp, #76
 968              	.LVL104:
 413:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 969              		.loc 1 413 9 view .LVU314
 970 015a FFF7FEFF 		bl	_PrintInt
 971              	.LVL105:
 414:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'u':
 972              		.loc 1 414 9 is_stmt 1 view .LVU315
 973 015e E5E7     		b	.L71
 974              	.LVL106:
 975              	.L74:
 416:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 976              		.loc 1 416 9 view .LVU316
 416:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 977              		.loc 1 416 11 is_stmt 0 view .LVU317
ARM GAS  /tmp/ccqdLTlK.s 			page 28


 978 0160 2968     		ldr	r1, [r5]
 979              	.LVL107:
 416:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 980              		.loc 1 416 11 view .LVU318
 981 0162 0F1D     		adds	r7, r1, #4
 982 0164 2F60     		str	r7, [r5]
 983 0166 0968     		ldr	r1, [r1]
 984              	.LVL108:
 417:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 985              		.loc 1 417 9 is_stmt 1 view .LVU319
 986 0168 0190     		str	r0, [sp, #4]
 987 016a 0092     		str	r2, [sp]
 988 016c 0A22     		movs	r2, #10
 989              	.LVL109:
 417:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 990              		.loc 1 417 9 is_stmt 0 view .LVU320
 991 016e 13A8     		add	r0, sp, #76
 992              	.LVL110:
 417:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 993              		.loc 1 417 9 view .LVU321
 994 0170 FFF7FEFF 		bl	_PrintUnsigned
 995              	.LVL111:
 418:segger/rtt/src/SEGGER_RTT_printf.c ****       case 'x':
 996              		.loc 1 418 9 is_stmt 1 view .LVU322
 997 0174 DAE7     		b	.L71
 998              	.LVL112:
 999              	.L72:
 421:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 1000              		.loc 1 421 9 view .LVU323
 421:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 1001              		.loc 1 421 11 is_stmt 0 view .LVU324
 1002 0176 2968     		ldr	r1, [r5]
 1003              	.LVL113:
 421:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 1004              		.loc 1 421 11 view .LVU325
 1005 0178 0F1D     		adds	r7, r1, #4
 1006 017a 2F60     		str	r7, [r5]
 1007 017c 0968     		ldr	r1, [r1]
 1008              	.LVL114:
 422:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1009              		.loc 1 422 9 is_stmt 1 view .LVU326
 1010 017e 0190     		str	r0, [sp, #4]
 1011 0180 0092     		str	r2, [sp]
 1012 0182 1022     		movs	r2, #16
 1013              	.LVL115:
 422:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1014              		.loc 1 422 9 is_stmt 0 view .LVU327
 1015 0184 13A8     		add	r0, sp, #76
 1016              	.LVL116:
 422:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1017              		.loc 1 422 9 view .LVU328
 1018 0186 FFF7FEFF 		bl	_PrintUnsigned
 1019              	.LVL117:
 423:segger/rtt/src/SEGGER_RTT_printf.c ****       case 's':
 1020              		.loc 1 423 9 is_stmt 1 view .LVU329
 1021 018a CFE7     		b	.L71
 1022              	.LVL118:
ARM GAS  /tmp/ccqdLTlK.s 			page 29


 1023              	.L75:
 1024              	.LBB3:
 426:segger/rtt/src/SEGGER_RTT_printf.c ****           if (s == NULL) {
 1025              		.loc 1 426 11 view .LVU330
 426:segger/rtt/src/SEGGER_RTT_printf.c ****           if (s == NULL) {
 1026              		.loc 1 426 24 is_stmt 0 view .LVU331
 1027 018c 2B68     		ldr	r3, [r5]
 1028              	.LVL119:
 426:segger/rtt/src/SEGGER_RTT_printf.c ****           if (s == NULL) {
 1029              		.loc 1 426 24 view .LVU332
 1030 018e 1A1D     		adds	r2, r3, #4
 1031              	.LVL120:
 426:segger/rtt/src/SEGGER_RTT_printf.c ****           if (s == NULL) {
 1032              		.loc 1 426 24 view .LVU333
 1033 0190 2A60     		str	r2, [r5]
 1034 0192 1F68     		ldr	r7, [r3]
 427:segger/rtt/src/SEGGER_RTT_printf.c ****             s = "(NULL)";  // Print (NULL) instead of crashing or breaking, as it is more informati
 1035              		.loc 1 427 11 is_stmt 1 view .LVU334
 427:segger/rtt/src/SEGGER_RTT_printf.c ****             s = "(NULL)";  // Print (NULL) instead of crashing or breaking, as it is more informati
 1036              		.loc 1 427 14 is_stmt 0 view .LVU335
 1037 0194 57B1     		cbz	r7, .L93
 1038              	.LVL121:
 1039              	.L80:
 430:segger/rtt/src/SEGGER_RTT_printf.c ****             c = *s;
 1040              		.loc 1 430 11 is_stmt 1 view .LVU336
 431:segger/rtt/src/SEGGER_RTT_printf.c ****             s++;
 1041              		.loc 1 431 13 view .LVU337
 431:segger/rtt/src/SEGGER_RTT_printf.c ****             s++;
 1042              		.loc 1 431 15 is_stmt 0 view .LVU338
 1043 0196 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 1044              	.LVL122:
 432:segger/rtt/src/SEGGER_RTT_printf.c ****             if (c == '\0') {
 1045              		.loc 1 432 13 is_stmt 1 view .LVU339
 433:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 1046              		.loc 1 433 13 view .LVU340
 433:segger/rtt/src/SEGGER_RTT_printf.c ****               break;
 1047              		.loc 1 433 16 is_stmt 0 view .LVU341
 1048 019a 0029     		cmp	r1, #0
 1049 019c C6D0     		beq	.L71
 436:segger/rtt/src/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 1050              		.loc 1 436 12 is_stmt 1 view .LVU342
 1051 019e 13A8     		add	r0, sp, #76
 1052 01a0 FFF7FEFF 		bl	_StoreChar
 1053              	.LVL123:
 437:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 1054              		.loc 1 437 43 view .LVU343
 437:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 1055              		.loc 1 437 30 is_stmt 0 view .LVU344
 1056 01a4 169B     		ldr	r3, [sp, #88]
 437:segger/rtt/src/SEGGER_RTT_printf.c ****         }
 1057              		.loc 1 437 43 view .LVU345
 1058 01a6 002B     		cmp	r3, #0
 1059 01a8 F5DA     		bge	.L80
 1060 01aa BFE7     		b	.L71
 1061              	.LVL124:
 1062              	.L93:
 428:segger/rtt/src/SEGGER_RTT_printf.c ****           }
ARM GAS  /tmp/ccqdLTlK.s 			page 30


 1063              		.loc 1 428 15 view .LVU346
 1064 01ac 124F     		ldr	r7, .L95
 1065 01ae F2E7     		b	.L80
 1066              	.LVL125:
 1067              	.L76:
 428:segger/rtt/src/SEGGER_RTT_printf.c ****           }
 1068              		.loc 1 428 15 view .LVU347
 1069              	.LBE3:
 441:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1070              		.loc 1 441 9 is_stmt 1 view .LVU348
 441:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1071              		.loc 1 441 11 is_stmt 0 view .LVU349
 1072 01b0 2B68     		ldr	r3, [r5]
 1073              	.LVL126:
 441:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1074              		.loc 1 441 11 view .LVU350
 1075 01b2 1A1D     		adds	r2, r3, #4
 1076              	.LVL127:
 441:segger/rtt/src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1077              		.loc 1 441 11 view .LVU351
 1078 01b4 2A60     		str	r2, [r5]
 1079 01b6 1968     		ldr	r1, [r3]
 1080              	.LVL128:
 442:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1081              		.loc 1 442 9 is_stmt 1 view .LVU352
 1082 01b8 0023     		movs	r3, #0
 1083 01ba 0193     		str	r3, [sp, #4]
 1084 01bc 0823     		movs	r3, #8
 1085 01be 0093     		str	r3, [sp]
 1086 01c0 1022     		movs	r2, #16
 1087 01c2 13A8     		add	r0, sp, #76
 1088              	.LVL129:
 442:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1089              		.loc 1 442 9 is_stmt 0 view .LVU353
 1090 01c4 FFF7FEFF 		bl	_PrintUnsigned
 1091              	.LVL130:
 443:segger/rtt/src/SEGGER_RTT_printf.c ****       case '%':
 1092              		.loc 1 443 9 is_stmt 1 view .LVU354
 1093 01c8 B0E7     		b	.L71
 1094              	.LVL131:
 1095              	.L70:
 445:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1096              		.loc 1 445 9 view .LVU355
 1097 01ca 2521     		movs	r1, #37
 1098              	.LVL132:
 445:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1099              		.loc 1 445 9 is_stmt 0 view .LVU356
 1100 01cc 13A8     		add	r0, sp, #76
 1101              	.LVL133:
 445:segger/rtt/src/SEGGER_RTT_printf.c ****         break;
 1102              		.loc 1 445 9 view .LVU357
 1103 01ce FFF7FEFF 		bl	_StoreChar
 1104              	.LVL134:
 446:segger/rtt/src/SEGGER_RTT_printf.c ****       default:
 1105              		.loc 1 446 9 is_stmt 1 view .LVU358
 1106 01d2 ABE7     		b	.L71
 1107              	.LVL135:
ARM GAS  /tmp/ccqdLTlK.s 			page 31


 1108              	.L54:
 455:segger/rtt/src/SEGGER_RTT_printf.c **** 
 456:segger/rtt/src/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1109              		.loc 1 456 3 view .LVU359
 1110              		.loc 1 456 17 is_stmt 0 view .LVU360
 1111 01d4 169B     		ldr	r3, [sp, #88]
 1112              		.loc 1 456 6 view .LVU361
 1113 01d6 002B     		cmp	r3, #0
 1114 01d8 05DD     		ble	.L83
 457:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 458:segger/rtt/src/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 459:segger/rtt/src/SEGGER_RTT_printf.c ****     //
 460:segger/rtt/src/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1115              		.loc 1 460 5 is_stmt 1 view .LVU362
 1116              		.loc 1 460 19 is_stmt 0 view .LVU363
 1117 01da 159A     		ldr	r2, [sp, #84]
 1118              		.loc 1 460 8 view .LVU364
 1119 01dc 32B9     		cbnz	r2, .L94
 1120              	.L84:
 461:segger/rtt/src/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 462:segger/rtt/src/SEGGER_RTT_printf.c ****     }
 463:segger/rtt/src/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1121              		.loc 1 463 5 is_stmt 1 view .LVU365
 1122              		.loc 1 463 28 is_stmt 0 view .LVU366
 1123 01de 169B     		ldr	r3, [sp, #88]
 1124 01e0 159A     		ldr	r2, [sp, #84]
 1125 01e2 1344     		add	r3, r3, r2
 1126 01e4 1693     		str	r3, [sp, #88]
 1127              	.L83:
 464:segger/rtt/src/SEGGER_RTT_printf.c ****   }
 465:segger/rtt/src/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1128              		.loc 1 465 3 is_stmt 1 view .LVU367
 466:segger/rtt/src/SEGGER_RTT_printf.c **** }
 1129              		.loc 1 466 1 is_stmt 0 view .LVU368
 1130 01e6 1698     		ldr	r0, [sp, #88]
 1131 01e8 19B0     		add	sp, sp, #100
 1132              	.LCFI8:
 1133              		.cfi_remember_state
 1134              		.cfi_def_cfa_offset 20
 1135              		@ sp needed
 1136 01ea F0BD     		pop	{r4, r5, r6, r7, pc}
 1137              	.LVL136:
 1138              	.L94:
 1139              	.LCFI9:
 1140              		.cfi_restore_state
 461:segger/rtt/src/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1141              		.loc 1 461 7 is_stmt 1 view .LVU369
 1142 01ec 03A9     		add	r1, sp, #12
 1143 01ee 3046     		mov	r0, r6
 1144 01f0 FFF7FEFF 		bl	SEGGER_RTT_Write
 1145              	.LVL137:
 1146 01f4 F3E7     		b	.L84
 1147              	.L96:
 1148 01f6 00BF     		.align	2
 1149              	.L95:
 1150 01f8 00000000 		.word	.LC0
 1151              		.cfi_endproc
ARM GAS  /tmp/ccqdLTlK.s 			page 32


 1152              	.LFE3:
 1154              		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1155              		.align	1
 1156              		.global	SEGGER_RTT_printf
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1161              	SEGGER_RTT_printf:
 1162              	.LVL138:
 1163              	.LFB4:
 467:segger/rtt/src/SEGGER_RTT_printf.c **** 
 468:segger/rtt/src/SEGGER_RTT_printf.c **** /*********************************************************************
 469:segger/rtt/src/SEGGER_RTT_printf.c **** *
 470:segger/rtt/src/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 471:segger/rtt/src/SEGGER_RTT_printf.c **** *
 472:segger/rtt/src/SEGGER_RTT_printf.c **** *  Function description
 473:segger/rtt/src/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 474:segger/rtt/src/SEGGER_RTT_printf.c **** *    This data is read by the host.
 475:segger/rtt/src/SEGGER_RTT_printf.c **** *
 476:segger/rtt/src/SEGGER_RTT_printf.c **** *  Parameters
 477:segger/rtt/src/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 478:segger/rtt/src/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 479:segger/rtt/src/SEGGER_RTT_printf.c **** *
 480:segger/rtt/src/SEGGER_RTT_printf.c **** *  Return values
 481:segger/rtt/src/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 482:segger/rtt/src/SEGGER_RTT_printf.c **** *     < 0:  Error
 483:segger/rtt/src/SEGGER_RTT_printf.c **** *
 484:segger/rtt/src/SEGGER_RTT_printf.c **** *  Notes
 485:segger/rtt/src/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 486:segger/rtt/src/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 487:segger/rtt/src/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 488:segger/rtt/src/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 489:segger/rtt/src/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 490:segger/rtt/src/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 491:segger/rtt/src/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 492:segger/rtt/src/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 493:segger/rtt/src/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 494:segger/rtt/src/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 495:segger/rtt/src/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 496:segger/rtt/src/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 497:segger/rtt/src/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 498:segger/rtt/src/SEGGER_RTT_printf.c **** */
 499:segger/rtt/src/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1164              		.loc 1 499 72 view -0
 1165              		.cfi_startproc
 1166              		@ args = 4, pretend = 12, frame = 8
 1167              		@ frame_needed = 0, uses_anonymous_args = 1
 1168              		.loc 1 499 72 is_stmt 0 view .LVU371
 1169 0000 0EB4     		push	{r1, r2, r3}
 1170              	.LCFI10:
 1171              		.cfi_def_cfa_offset 12
 1172              		.cfi_offset 1, -12
 1173              		.cfi_offset 2, -8
 1174              		.cfi_offset 3, -4
 1175 0002 00B5     		push	{lr}
 1176              	.LCFI11:
 1177              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccqdLTlK.s 			page 33


 1178              		.cfi_offset 14, -16
 1179 0004 82B0     		sub	sp, sp, #8
 1180              	.LCFI12:
 1181              		.cfi_def_cfa_offset 24
 1182 0006 03AB     		add	r3, sp, #12
 1183 0008 53F8041B 		ldr	r1, [r3], #4
 500:segger/rtt/src/SEGGER_RTT_printf.c ****   int r;
 1184              		.loc 1 500 3 is_stmt 1 view .LVU372
 501:segger/rtt/src/SEGGER_RTT_printf.c ****   va_list ParamList;
 1185              		.loc 1 501 3 view .LVU373
 502:segger/rtt/src/SEGGER_RTT_printf.c **** 
 503:segger/rtt/src/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1186              		.loc 1 503 3 view .LVU374
 1187 000c 0193     		str	r3, [sp, #4]
 504:segger/rtt/src/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1188              		.loc 1 504 3 view .LVU375
 1189              		.loc 1 504 7 is_stmt 0 view .LVU376
 1190 000e 01AA     		add	r2, sp, #4
 1191 0010 FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1192              	.LVL139:
 505:segger/rtt/src/SEGGER_RTT_printf.c ****   va_end(ParamList);
 1193              		.loc 1 505 3 is_stmt 1 view .LVU377
 506:segger/rtt/src/SEGGER_RTT_printf.c ****   return r;
 1194              		.loc 1 506 3 view .LVU378
 507:segger/rtt/src/SEGGER_RTT_printf.c **** }
 1195              		.loc 1 507 1 is_stmt 0 view .LVU379
 1196 0014 02B0     		add	sp, sp, #8
 1197              	.LCFI13:
 1198              		.cfi_def_cfa_offset 16
 1199              		@ sp needed
 1200 0016 5DF804EB 		ldr	lr, [sp], #4
 1201              	.LCFI14:
 1202              		.cfi_restore 14
 1203              		.cfi_def_cfa_offset 12
 1204 001a 03B0     		add	sp, sp, #12
 1205              	.LCFI15:
 1206              		.cfi_restore 3
 1207              		.cfi_restore 2
 1208              		.cfi_restore 1
 1209              		.cfi_def_cfa_offset 0
 1210 001c 7047     		bx	lr
 1211              		.cfi_endproc
 1212              	.LFE4:
 1214              		.section	.rodata._aV2C.0,"a"
 1215              		.align	2
 1218              	_aV2C.0:
 1219 0000 30313233 		.ascii	"0123456789ABCDEF"
 1219      34353637 
 1219      38394142 
 1219      43444546 
 1220              		.text
 1221              	.Letext0:
 1222              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdarg.h"
 1223              		.file 3 "<built-in>"
 1224              		.file 4 "segger/rtt/inc/SEGGER_RTT.h"
ARM GAS  /tmp/ccqdLTlK.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT_printf.c
     /tmp/ccqdLTlK.s:21     .text._StoreChar:00000000 $t
     /tmp/ccqdLTlK.s:26     .text._StoreChar:00000000 _StoreChar
     /tmp/ccqdLTlK.s:113    .text._PrintUnsigned:00000000 $t
     /tmp/ccqdLTlK.s:118    .text._PrintUnsigned:00000000 _PrintUnsigned
     /tmp/ccqdLTlK.s:344    .text._PrintUnsigned:000000dc $d
     /tmp/ccqdLTlK.s:1218   .rodata._aV2C.0:00000000 _aV2C.0
     /tmp/ccqdLTlK.s:349    .text._PrintInt:00000000 $t
     /tmp/ccqdLTlK.s:354    .text._PrintInt:00000000 _PrintInt
     /tmp/ccqdLTlK.s:582    .rodata.SEGGER_RTT_vprintf.str1.4:00000000 $d
     /tmp/ccqdLTlK.s:586    .text.SEGGER_RTT_vprintf:00000000 $t
     /tmp/ccqdLTlK.s:592    .text.SEGGER_RTT_vprintf:00000000 SEGGER_RTT_vprintf
     /tmp/ccqdLTlK.s:718    .text.SEGGER_RTT_vprintf:00000054 $d
     /tmp/ccqdLTlK.s:733    .text.SEGGER_RTT_vprintf:0000008c $t
     /tmp/ccqdLTlK.s:857    .text.SEGGER_RTT_vprintf:000000fc $d
     /tmp/ccqdLTlK.s:1150   .text.SEGGER_RTT_vprintf:000001f8 $d
     /tmp/ccqdLTlK.s:1155   .text.SEGGER_RTT_printf:00000000 $t
     /tmp/ccqdLTlK.s:1161   .text.SEGGER_RTT_printf:00000000 SEGGER_RTT_printf
     /tmp/ccqdLTlK.s:1215   .rodata._aV2C.0:00000000 $d
     /tmp/ccqdLTlK.s:890    .text.SEGGER_RTT_vprintf:0000011d $d
     /tmp/ccqdLTlK.s:890    .text.SEGGER_RTT_vprintf:0000011e $t

UNDEFINED SYMBOLS
SEGGER_RTT_Write
